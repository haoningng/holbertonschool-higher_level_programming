The ``0-add_integer`` module
============================

Using ``add_integer``
-------------------

This is a text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer`` module:
    >>> add_integer = __import__('0-add_integer').add_integer

Tests:

    Add two positive integers:
    >>> add_integer(1, 2)
    3

    Add one positive integer and one negative integer:
    >>> add_integer(100, -2)
    98

    Missing second arg:
    >>> add_integer(2)
    100

    Set first arg as float:
    >>> add_integer(100.3, -2)
    98

    Set second arg as string:
    >>> add_integer(4, "School")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    Set first arg as None:
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    Missing both args
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

    Set a or b as infinity:
    >>> add_integer(float("inf"), 2)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
    >>> add_integer(2, float("inf"))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    Set a or b as Nan:
    >>> add_integer(float("Nan"), 2)
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer
    >>> add_integer(2, float("Nan"))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer
